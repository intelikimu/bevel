# This playbook adds a new validator org / validator to a DLT network on existing Kubernetes clusters
# The Kubernetes clusters should already be created and the infomation to connect to the
#  clusters be updated in the network.yaml file that is used as an input to this playbook
###########################################################################################
# To Run this playbook from this directory, use the following command (network.yaml also in this directory)
#  ansible-playbook add-validator.yaml -e "@./network.yaml"
############################################################################################
# Please ensure that the ../../shared/configuration playbooks have been run and a DLT network exists.
---
- hosts: ansible_provisioners
  gather_facts: no
  no_log: "{{ no_ansible_log | default(false) }}"
  tasks:      
  # delete build directory 
  - name: Remove build directory
    file:
      path: "./build"
      state: absent

  # Generate Ambassador certificate for nodes. These certificates are used for Orion TLS as well
  - name: "Create ambassador certificates for Nodes" 
    include_role: 
      name: create/certificates/ambassador
    vars:
      root_subject: "{{ network.config.subject }}"
      cert_subject: "{{ network.config.subject | regex_replace(',', '/') }}"
      services: "{{ organizationItem.services }}"
      organisation: "{{ organizationItem.name | lower }}"
      component_ns: "{{ organizationItem.name | lower }}-bes"
      component_name: "{{ organizationItem.name | lower }}"
      kubernetes: "{{ organizationItem.k8s }}"
      vault: "{{ organizationItem.vault }}"
    loop: "{{ network['organizations']}}"
    loop_control:
      loop_var: organizationItem


  # This role generates the enode for the new validators and its acceptance for the network
  - name: "Generates new validator materials and voting for its acceptance"
    include_role:
      name: create/validator_node  
    vars:
      build_path: "./build"
      kubernetes: "{{ item.k8s }}"
      consensus: "{{ network.config.consensus }}"
      component_ns: "{{ item.name | lower }}-bes"
      name: "{{ item.name | lower }}"
      peers: "{{ item.services.validators}}"
      tm_node: "{{ network.config.tm_nodes | first }}"
      storageclass_name: "{{ item.cloud_provider }}storageclass"
      external_url: "{{ item.external_url_suffix }}"
      vault: "{{ item.vault }}"
      git_url: "{{ item.gitops.git_url }}"
      git_branch: "{{ item.gitops.branch }}"
      docker_url: "{{ network.docker.url }}"
      charts_dir: "{{ item.gitops.chart_source }}"
      values_dir: "{{playbook_dir}}/../../../{{item.gitops.release_dir}}/{{ item.name | lower }}"
    loop: "{{ network['organizations'] }}"
    when: network.config.consensus == 'ibft' and item.type == 'validator'       

  - name: "Deploy validator nodes"
    include_role:
      name: create/validator
    vars:
      build_path: "./build"
      kubernetes: "{{ item.k8s }}"
      consensus: "{{ network.config.consensus }}"
      component_ns: "{{ item.name | lower }}-bes"
      name: "{{ item.name | lower }}"
      peers: "{{ item.services.validators}}"
      storageclass_name: "{{ item.cloud_provider }}storageclass"
      external_url: "{{ item.external_url_suffix }}"
      vault: "{{ item.vault }}"
      git_url: "{{ item.gitops.git_url }}"
      git_branch: "{{ item.gitops.branch }}"
      docker_url: "{{ network.docker.url }}"
      charts_dir: "{{ item.gitops.chart_source }}"
      values_dir: "{{playbook_dir}}/../../../{{item.gitops.release_dir}}/{{ item.name | lower }}"
    loop: "{{ network['organizations'] }}"
    when: network.config.consensus == 'ibft' and item.type == 'validator'


  vars: #These variables can be overriden from the command line
    install_os: "linux"                 #Default to linux OS
    install_arch:  "amd64"              #Default to amd64 architecture
    bin_install_dir:  "~/bin"            #Default to /bin install directory for binaries
    add_new_org: false
