apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.nodeName }}
  namespace: {{ .Values.metadata.namespace }}
  # {{ if $.Values.ambassador }}
  # annotations:
  #   getambassador.io/config: | 
  #     ---
  #     apiVersion: ambassador/v1
  #     kind: Mapping
  #     name: {{ .Values.nodeName }}_mapping
  #     prefix: /
  #     service: {{ .Values.nodeName }}.{{ .Values.metadata.namespace }}:{{ .Values.service.port }}
  #     host: {{ .Values.nodeName }}.{{ .Values.ambassador.external_url_suffix }}:8443
  #     tls: false
  #     ---
  #     apiVersion: ambassador/v1
  #     kind: TLSContext
  #     name: {{ .Values.nodeName }}_mapping_tlscontext
  #     hosts:
  #     - {{ .Values.nodeName }}.{{ .Values.ambassador.external_url_suffix }}
  #     secret: {{ .Values.nodeName }}-ambassador-certs
  # {{ end }}
  labels:
    run: {{ .Values.nodeName }}
    app.kubernetes.io/name: {{ .Values.nodeName }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  selector:
    app: {{ .Values.nodeName }}
# we need Local policy and healthCheckNodePort set to get rid of logs pollution
{{- if (.Values.healthCheckNodePort) }}
  healthCheckNodePort: {{ .Values.healthCheckNodePort }}
{{- end }}
  type: {{ .Values.serviceSsh.type }}
  ports:
    - port: {{ .Values.serviceSsh.port }}
      targetPort: {{ .Values.serviceSsh.targetPort }}
      protocol: TCP
      {{- if .Values.serviceSsh.nodePort }}
      nodePort: {{ .Values.serviceSsh.nodePort }}
      {{- end }}
 