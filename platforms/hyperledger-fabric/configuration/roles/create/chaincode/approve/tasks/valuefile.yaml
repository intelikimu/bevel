##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

##############################################################################################
#  This role creates the approve_chaincode value file, for one peer per org
##############################################################################################

---
# Log message before waiting for chaincode to be installed
- name: "Log waiting for chaincode {{ chaincode.name }} v{{ chaincode.version }} installation on {{ peer.name }}"
  debug:
    msg: "Waiting for chaincode {{ chaincode.name }} v{{ chaincode.version }} to be installed on {{ peer.name }}. This may take a few minutes."
  when:
    - skip_install_checking is not defined or skip_install_checking == false or skip_install_checking == 'false'

# Check or Wait if install-chaincode is already run
- name: "Waiting for chaincode to be installed on {{ peer.name }}"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/helm_component"
  vars:
    component_type: "Job"
    namespace: "{{ org.name |lower }}-net"
    kubernetes: "{{ org.k8s }}"
    component_name: "{{ 'installchaincode' if chaincode is defined and ( chaincode.external_chaincode is undefined or chaincode.external_chaincode == false ) else 'instextcc' }}-{{ peer.name }}-{{ chaincode.name }}-{{ chaincode.version }}"
  when:
    - skip_install_checking is not defined or skip_install_checking == false or skip_install_checking == 'false'
  register: chaincode_install_status

# Log message if chaincode installation was successful or timed out
- name: "Log chaincode installation status for {{ chaincode.name }} v{{ chaincode.version }} on {{ peer.name }}"
  debug:
    msg: "{{ 'Successfully verified chaincode installation for ' + chaincode.name + ' v' + chaincode.version + ' on peer ' + peer.name if chaincode_install_status.failed is not defined or not chaincode_install_status.failed else 'Chaincode installation verification timed out. This might be normal if the installation job is still running or has failed. Check the job logs with: kubectl logs -n ' + org.name|lower + '-net job/' + ('installchaincode' if chaincode is defined and ( chaincode.external_chaincode is undefined or chaincode.external_chaincode == false ) else 'instextcc') + '-' + peer.name + '-' + chaincode.name + '-' + chaincode.version }}"
  when:
    - skip_install_checking is not defined or skip_install_checking == false or skip_install_checking == 'false'

# Log message before checking for approve chaincode job
- name: "Log checking for approve-chaincode job for {{ chaincode.name }} v{{ chaincode.version }} on {{ peer.name }}"
  debug:
    msg: "Checking if chaincode {{ chaincode.name }} v{{ chaincode.version }} has already been approved on peer {{ peer.name }}."

# Check if approve-chaincode is already run
- name: 'Check for approve-chaincode job'
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/helm_component"
  vars:
    component_type: "OneTimeJob"
    namespace: "{{ org.name |lower }}-net"
    kubernetes: "{{ org.k8s }}"
    component_name: "approvecc-{{ peer.name }}-{{ chaincode.name }}-{{ chaincode.version }}-{{ chaincode.sequence | default('1') }}"
  register: approve_check_status

# Log message with approval check results
- name: "Log approval check status for {{ chaincode.name }} v{{ chaincode.version }} on {{ peer.name }}"
  debug:
    msg: "{{ 'Approval job for chaincode ' + chaincode.name + ' v' + chaincode.version + ' was found on peer ' + peer.name if approve_check_status.result.resources|length > 0 else 'No existing approval job found for chaincode ' + chaincode.name + ' v' + chaincode.version + ' on peer ' + peer.name + '. Will create approval job.' }}"

# Set Variable approve_chaincode
- name: "Set Variable approve_chaincode"
  set_fact:
    approve_chaincode: "{{ result }}"
  when: skip_install_checking is not defined or skip_install_checking == false or skip_install_checking == 'false'

# Set Variable approve_chaincode
- name: "Set Variable approve_chaincode"
  set_fact:
    approve_chaincode: { 'resources': [] }
  when: skip_install_checking is defined and (skip_install_checking == 'true' or skip_install_checking == true)

# validate pdc config
- name: "validate pdc config"
  fail:
    msg: "chaincode.pdc.collections_config is invalid"
  when:
    - chaincode.pdc is defined
    - chaincode.pdc.enabled
    - (chaincode.pdc.collections_config is not defined) or (chaincode.pdc.collections_config | length == 0)

# Check if pdc collection config file exists
- name: "Check if pdc collection config file exists"
  stat:
    path: "{{ chaincode.pdc.collections_config }}"
  register: check_file
  failed_when: check_file.stat.exists == false
  when:
    - chaincode.pdc is defined
    - chaincode.pdc.enabled
    - chaincode.pdc.collections_config is defined

# Log debug message when a PDC collection config file doesn't exist
- name: "Debug PDC collection config file not found"
  debug:
    msg: "PDC collection config file not found at {{ chaincode.pdc.collections_config }}. Please verify the path and file contents."
  when:
    - chaincode.pdc is defined
    - chaincode.pdc.enabled
    - chaincode.pdc.collections_config is defined
    - check_file.stat.exists == false

# Create value file for chaincode approve
- name: "Create value file for chaincode approve"
  include_role:
    name: helm_component
  vars:    
    name: "{{ org.name | lower }}"
    type: "approve_chaincode_job"
    component_name: "approve-{{ org.name | lower }}-{{ item.channel_name|lower }}-{{ peer.name }}{{ chaincode.name}}{{ chaincode.version }}-{{ chaincode.sequence | default('1') }}"
    namespace: "{{ org.name |lower }}-net"
    peer_name: "{{ peer.name }}"
    peer_address: "{{ peer.name }}.{{ org.name |lower }}-net:{{ peer.grpc.port }}"
    git_protocol: "{{ org.gitops.git_protocol }}"
    git_url: "{{ org.gitops.git_url }}"
    git_branch: "{{ org.gitops.branch }}"
    charts_dir: "{{ org.gitops.chart_source }}"
    vault: "{{ org.vault }}"
    component_chaincode: "{{ chaincode }}"
    values_dir: "{{ playbook_dir }}/../../../{{ org.gitops.release_dir }}/{{ org.name | lower }}"
    pdc_config_content: "{{ lookup('file', '{{ chaincode.pdc.collections_config }}')}}"
  when:
    - chaincode is defined and approve_chaincode.resources|length == 0

# Log message when creating approve chaincode job
- name: "Log creating approval job for {{ chaincode.name }} v{{ chaincode.version }}"
  debug:
    msg: "Creating approval job for chaincode {{ chaincode.name }} v{{ chaincode.version }} with sequence {{ chaincode.sequence | default('1') }} for peer {{ peer.name }} in organization {{ org.name | lower }}."
  when:
    - chaincode is defined and approve_chaincode.resources|length == 0

# Log message when skipping creation of approve chaincode job
- name: "Log skipping approval job for {{ chaincode.name }} v{{ chaincode.version }}"
  debug:
    msg: "Skipping creation of approve job for chaincode {{ chaincode.name }} v{{ chaincode.version }} as it has already been approved for peer {{ peer.name }} in organization {{ org.name | lower }}."
  when:
    - chaincode is defined and approve_chaincode.resources|length > 0

# Git Push : Push the above generated files to git directory 
- name: Git Push
  include_role: 
    name: "{{ playbook_dir }}/../../shared/configuration/roles/git_push"
  vars:
    GIT_DIR: "{{ playbook_dir }}/../../../"
    gitops: "{{ org.gitops }}"
    msg: "[ci skip] Pushing chaincode approve files"
  when: approve_chaincode.resources|length == 0
