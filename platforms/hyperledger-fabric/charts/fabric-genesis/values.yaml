##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
---
# The following are for overriding global values
global:
  #Provide the service account name which will be created.
  serviceAccountName: vault-auth  
  cluster:
    provider: aws  # choose from: minikube | aws | azure | gcp
    cloudNativeServices: false # only 'false' is implemented

  vault:
    #Provide the type of vault
    #Eg. type: hashicorp
    type: hashicorp
    #Provide the vaultrole for an organization
    #Eg. vaultrole: org1-vault-role
    role: vault-role
    #Provide the network type
    network: fabric
    #Provide the vault server address
    #Eg. vaultaddress: http://Vault-884963190.eu-west-1.elb.amazonaws.com
    address:
    #Provide the kubernetes auth backed configured in vault for an organization
    #Eg. authpath: supplychain
    authPath: supplychain
    #Provide the secret engine.
    secretEngine: secretsv2
    #Provide the vault path where the secrets will be stored
    secretPrefix: "data/supplychain"

  proxy:
    #This will be the proxy/ingress provider. Can have values "haproxy" or "none"
    #Eg. provider: "haproxy"
    provider: haproxy
    #This field specifies the external url for the organization
    #Eg. externalUrlSuffix: test.blockchaincloudpoc.com
    externalUrlSuffix: test.blockchaincloudpoc.com

  # HLF Network Version
  network:
    version: 2.5.4

image:
  #Provide the image name for the generate-geneis container
  #Eg. image: ghcr.io/hyperledger/bevel-fabric-ca:latest
  ca: ghcr.io/hyperledger/bevel-fabric-ca:latest
  #Provide the valid image name and version to read certificates from vault server
  #Eg.alpineutils: ghcr.io/hyperledger/bevel-alpine:latest
  alpineUtils: ghcr.io/hyperledger/bevel-alpine:latest
  #Provide the secret to use if private repository
  #Eg. pullSecret: regcred
  pullSecret:

#Provide name of the consensus. Currently support raft and kafka
#Eg. name: raft
consensus:
  name: raft

# Allows specification of one or many organizations that will be connecting to a network.
organizations:
  # Specification for the 1st organization.
  - organization:
    name: supplychain 
    type: orderer    
    orderers:
    - orderer:
      name: orderer1
      ordererAddress: orderer1.test.blockchaincloudpoc.com:443
    - orderer:
      name: orderer2
      ordererAddress: orderer2.test.blockchaincloudpoc.com:443
    - orderer:
      name: orderer3
      ordererAddress: orderer3.test.blockchaincloudpoc.com:443  

  # Specification for the 2nd organization.
  - organization:
    name: carrier
    type: peer  
    peers:
    - peer:
      name: peer0-carrier          
      peerAddress: peer0-carrier.cmar-net.test.blockchaincloudpoc.com:443 # External URI of the peer

# The channels defined for a network with participating peers in each channel
channels:
  - channel:
    channelName: allchannel
    consortium: SupplyChainConsortium
    orderers:
      - supplychain  
    participants:
    - organization:
      name: carrier
    genesis:
      name: OrdererGenesis

vars: #These variables can be overriden from the command line
  install_os: "linux"                 #Default to linux OS
  install_arch:  "amd64"              #Default to amd64 architecture

settings:
  # Flag to ensure the genesis secret is removed on helm uninstall
  removeGenesisOnDelete: true
  # Flag to ensure the genesis configmap is removed on helm uninstall
  removeConfigMapOnDelete: true

labels:
  service: []
  pvc: []
  deployment: []
