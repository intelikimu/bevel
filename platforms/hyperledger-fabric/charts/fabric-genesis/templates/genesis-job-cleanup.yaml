---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "fabric-genesis.name" . }}-cleanup
  labels:
    app.kubernetes.io/name: fabric-genesis-job-cleanup
    app.kubernetes.io/component: genesis-job-cleanup
    app.kubernetes.io/part-of: {{ include "fabric-genesis.fullname" . }}
    app.kubernetes.io/namespace: {{ .Release.Namespace }}
    app.kubernetes.io/managed-by: helm
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/hook-weight: "0"
    helm.sh/hook: "pre-delete"
    helm.sh/hook-delete-policy: "hook-succeeded"
spec:
  backoffLimit: 3
  completions: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: fabric-genesis-job-cleanup
        app.kubernetes.io/component: genesis-job-cleanup
        app.kubernetes.io/part-of: {{ include "fabric-genesis.fullname" . }}
        app.kubernetes.io/namespace: {{ .Release.Namespace }}
        app.kubernetes.io/managed-by: helm
    spec:
      serviceAccountName: {{ .Values.global.serviceAccountName }}      
      restartPolicy: "Never"
      containers:
        - name: delete-secrets
          image: "{{ $.Values.image.alpineUtils }}"
          securityContext:
            runAsUser: 0
          imagePullPolicy: IfNotPresent
          env:
          command: ["sh", "-c"]
          args:
            - |-
{{- if .Values.settings.removeGenesisOnDelete }}

              function deleteSecret {
                key=$1
                kubectl get secret ${key} --namespace {{ .Release.Namespace }} -o json > /dev/null 2>&1
                if [ $? -eq 0 ]; then
                  kubectl delete secret ${key} --namespace {{ .Release.Namespace }}
                fi
              }
              
              {{- range $channel := $.Values.channels }}
                deleteSecret {{ $channel.channelName | lower}}-genesis
              {{- end}} 
{{- end}} 
{{- if .Values.settings.removeConfigMapOnDelete }}

              function deleteConfigMap {
                key=$1
                kubectl get configmap ${key} --namespace {{ .Release.Namespace }} -o json > /dev/null 2>&1
                if [ $? -eq 0 ]; then
                  kubectl delete configmap ${key} --namespace {{ .Release.Namespace }}
                fi
              }
              
              {{- range $channel := $.Values.channels }}
                deleteConfigMap {{ $channel.channelName | lower}}-genesis-file
                deleteConfigMap channel-artifacts-{{ $channel.channelName | lower }} 
                deleteConfigMap anchorpeer-artifacts-{{ $channel.channelName | lower }}  
              {{- end}} 
{{- end}}
  





