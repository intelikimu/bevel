##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
---
# The following are for overriding global values
global:
  #Provide the service account name which will be created.
  serviceAccountName: vault-auth  
  cluster:
    provider: aws  # choose from: minikube | aws | azure | gcp
    cloudNativeServices: false # only 'false' is implemented
  vault:
    #Provide the type of vault
    #Eg. type: hashicorp
    type: hashicorp
    #Provide the vaultrole for an organization
    #Eg. vaultrole: org1-vault-role
    role: vault-role
    #Provide the vault server address
    #Eg. vaultaddress: http://Vault-884963190.eu-west-1.elb.amazonaws.com
    address:
    #Provide the kubernetes auth backed configured in vault for an organization
    #Eg. authpath: supplychain
    authPath: supplychain
    #Provide the secret engine.
    secretEngine: secretsv2
    #Provide the vault path where the secrets will be stored
    secretPrefix: "data/supplychain"
    #Enable or disable TLS for vault communication
    #Eg. tls: true
    tls: 

    proxy:
      #This will be the proxy/ingress provider. Can have values "haproxy" or "none"
      #Eg. provider: "haproxy"
      provider: haproxy
      #This field specifies the external url for the organization
      #Eg. externalUrlSuffix: test.blockchaincloudpoc.com
      externalUrlSuffix: test.blockchaincloudpoc.com

cacerts:
  ca:
  #Provide organization's name
  orgName: supplychain
  #Provide the subject of the services ca organization's
  #Eg. subject: "/C=GB/ST=London/L=London/O=Carrier/CN=carrier-net"
  subject: /C=GB/ST=London/L=London/O=Orderer
  # Flag to ensure the certificates secrets are removed on helm uninstall

catools:
  orgData:
    #Provide organization's name in lowercases
    #Eg. orgName: supplychain 
    orgName: supplychain
    #Provide organization's type (orderer or peer)
    #Eg. component_type: orderer
    type:
    #Provide organization's subject
    #Eg. "O=Orderer,L=51.50/-0.13/London,C=GB"
    componentSubject:
    #Provide organization's subject
    #Eg. "O=Orderer,L=51.50/-0.13/London,C=GB"
    certSubject:
    #Provide organization's country
    #Eg. UK
    componentCountry: UK
    #Provide organization's state
    #Eg. London
    componentState: London
    #Provide organization's location
    #Eg. Lodon
    componentLocation: Lodon

  #Provide orderer's names
  orderers:
    - orderer1
    - orderer2
    - orderer3

  #Provide peer's names
  peers:
    - peer0
  
  users: 
    # Generating User Certificates with custom attributes using Fabric CA in Bevel for Peer Organizations
    usersList:
      - user:
        identity: user1
        attributes:
        - key: "hf.Revoker"
          value: "true"
      - user:
        identity: user2
        attributes:
        - key: "hf.Revoker"
          value: "true"
    #Base64 encoded list of users
    #Eg. IC0gdXNlcjoKICAgICAgICAgIGlkZW50aXR5OiB1c2VyMQogICAgICAgICAgYXR0cmlidXRlczoKICAgICAgICAgICAgLSBrZXk6IGtleTEKICAgICAgIgICAgICAgIC0ga2V5OiBrZXkyCiAgICAgICAgICAgICAgdmFsdWU6IHZhbHVlMgogICAgICAgIC0gdXNlcjoKICAgICAgICAgIGlkZW50aXR5OiB1c2VyMgogICAgICAgICAgYXR0cmlidXRlczoKICAgICAgICAgICAgLSBrZXk6IGtleTEKICAgICAgICAgICAgICB2YWx1ZTogdmFsdWUxCiAgICAgICAgICAgIC0ga2V5OiBrZXkzCiAgICAgICAgICAgICAgdmFsdWU6IHZhbHVlMw==
    usersListAnsible:
    #Provides a list of user identities
    usersIdentities:
      - user1
      - user2

  checks:
    #Provides the need to refresh user certificates
    refreshCertValue: false
    #Add a peer to an existing network
    addPeerValue: False

storage:
  #Provide the size for CA
  #Eg. size: 512Mi
  size: 512Mi

image:
  #Provide the valid image name and version to read certificates from vault server
  #Eg.alpineutils: ghcr.io/hyperledger/bevel-alpine:latest
  alpineUtils: ghcr.io/hyperledger/bevel-alpine:latest
  #Provide the valid image name and version for fabric ca
  #Eg. ca: ghcr.io/hyperledger/bevel-fabric-ca:latest
  ca: ghcr.io/hyperledger/bevel-fabric-ca:latest
  #Provide the secret to use if private repository
  #Eg. pullSecret: regcred
  pullSecret: 

server:
  #Provide the value for tlsStatus to be true or false for  deployment
  #Eg. tlsStatus: true
  tlsStatus: true
  #Provide the admin name for CA server
  #Eg. admin: admin
  admin: admin
  # Provide the path for Fabric CA Server Config
  # Eg. configpath: conf/ca-config-default.yaml
  
service:
  ports:
    tcp:
      #Provide tcp node port to be exposed for ca server
      #Eg. nodePort: 30007
      nodePort:
      #Provide tcp cluster IP port to be exposed for ca server
      #Eg. clusterIpPort: 7054
      clusterIpPort: 7054

labels:
  service: []
  pvc: []
  deployment: []
