apiVersion: v1
kind: Service
metadata:
  name: {{ include "ambassador.fullname" . }}
  namespace: {{ include "ambassador.namespace" . }}
  labels:
    app.kubernetes.io/name: {{ include "ambassador.name" . }}
    app.kubernetes.io/part-of: {{ .Release.Name }}
    helm.sh/chart: {{ include "ambassador.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    {{- if .Values.deploymentTool }}
    app.kubernetes.io/managed-by: {{ .Values.deploymentTool }}
    {{- else }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    {{- end }}
    app.kubernetes.io/component: ambassador-service
    product: aes
{{- if .Values.ambassador.eip }}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
    service.beta.kubernetes.io/aws-load-balancer-eip-allocations: "{{ .Values.ambassador.eip }}"
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v1
      kind:  Module
      name:  ambassador
      config:
        use_proxy_proto: true
        use_remote_address: false
  {{- end }}
  {{- if .Values.ambassador.grpc }}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v1
      kind:  Module
      name:  ambassador
      config:
        enable_grpc_http11_bridge: true
        enable_grpc_web: true
        use_remote_address: false
        x_forwarded_proto_redirect: true
  {{- end }}
spec:
  type: {{ .Values.service.type }}
  {{- if .Values.service.loadBalancerIP }}
  loadBalancerIP: "{{ .Values.service.loadBalancerIP }}"
  {{- end }}
  {{- if .Values.service.externalTrafficPolicy }}
  externalTrafficPolicy: "{{ .Values.service.externalTrafficPolicy }}"
  {{- end }}
  {{- if .Values.service.sessionAffinity }}
  sessionAffinity: {{ .Values.service.sessionAffinity }}
  {{- end }}
  {{- if .Values.service.sessionAffinityConfig }}
  sessionAffinityConfig:
    {{- toYaml .Values.service.sessionAffinityConfig | nindent 4 }}
  {{- end }}
  ports:
   - port: 80
     name: http
     targetPort: 8080
   - port: 443
     name: https
     targetPort: 8443
{{- with .Values.ambassador.otherPorts.portRange}}
{{- if and .from .to }}
  {{- range untilStep (.from | int) (.to | int) 1 }}
   - port: {{ . }}
     name: port-{{- . }}
     targetPort: {{ . }}
  {{- end }}
   - port: {{ .to }}
     name: port-{{- .to }}
     targetPort: {{ .to }}
{{- end }}
{{- end }}
{{- range .Values.ambassador.otherPorts.ports }}
   - port: {{ . | int }}
     name: port-{{- . }}
     targetPort: {{ . | int }}
{{- end }}
  selector:
    app.kubernetes.io/name: {{ include "ambassador.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  {{- with .Values.loadBalancerSourceRanges }}
  {{- if first .Values.ambassador.loadBalancerSourceRanges }}
  loadBalancerSourceRanges: 
{{- range .Values.ambassador.loadBalancerSourceRanges }}
   - {{ . }} 
{{- end }}
{{- else }}
  loadBalancerSourceRanges: 
  - 0.0.0.0/0
{{- end }}  
  externalIPs:
    {{- toYaml .Values.service.externalIPs | nindent 4 }}
  {{- end }}
