##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

apiVersion: v1
kind: Service
metadata:
  name: "{{ $.Values.node.name }}"
  namespace: {{ .Release.Namespace }}
spec:
  type: {{ $.Values.service.type }}
  ports:
  - name: indy-node-node
    port: {{ $.Values.service.ports.nodePort }}
    targetPort: {{ $.Values.service.ports.nodeTargetPort }}
    {{ if eq $.Values.service.type "NodePort" }}
    nodePort: {{ $.Values.service.ports.nodeTargetPort }}
    {{ end }}
  - name: indy-node-client
    port: {{ $.Values.service.ports.clientPort }}
    targetPort: {{ $.Values.service.ports.clientTargetPort }}
    {{ if eq $.Values.service.type "NodePort" }}
    nodePort: {{ $.Values.service.ports.clientTargetPort }}
    {{ end }}
  selector:
    app: "{{ $.Values.node.name }}"

{{- if eq $.Values.proxy.provider "ambassador" }}
---
apiVersion: getambassador.io/v3alpha1
kind: Listener
metadata:
  name: "{{ .Values.node.name }}-node-listener"
  namespace: {{ .Release.Namespace }}
spec:
  port: {{ .Values.node.ambassadorPort }}
  protocol: TCP
  securityModel: XFP
  hostBinding:
    namespace:
      from: SELF
---
apiVersion: getambassador.io/v3alpha1
kind: TCPMapping
metadata:
  name: "{{ .Values.node.name }}-node-mapping"
  namespace: {{ .Release.Namespace }}
spec:
  port: {{ .Values.node.ambassadorPort }}
  service: "{{ .Values.node.name }}.{{ .Release.Namespace }}:{{ .Values.service.ports.nodeTargetPort }}"

---
apiVersion: getambassador.io/v3alpha1
kind: Listener
metadata:
  name: "{{ .Values.node.name }}-client-listener"
  namespace: {{ .Release.Namespace }}
spec:
  port: {{ .Values.client.ambassadorPort }}
  protocol: TCP
  securityModel: XFP
  hostBinding:
    namespace:
      from: SELF
---
apiVersion: getambassador.io/v3alpha1
kind: TCPMapping
metadata:
  name: "{{ .Values.node.name }}-client-mapping"
  namespace: {{ .Release.Namespace }}
spec:
  port: {{ .Values.client.ambassadorPort }}
  service:  "{{ .Values.node.name }}.{{ .Release.Namespace }}:{{ .Values.service.ports.clientTargetPort }}"
{{- end }}

